openapi: 3.0.0
info:
  title: API for PDV
  description:
    This is an example of using OAuth2 Access Code Flow in a specification
    to describe security to your API.
  version: 1.0.0
servers:
  - url: http://localhost:8080/pdv/1.0.0
    description: SwaggerHub API Auto Mocking
security:
  - accessCode:
      - read
      - write
paths:
  /health_check:
    get:
      summary: Server heartbeat operation
      description:
        "This operation shows how to override the global security defined\
        \ above, as we want to open it up for all users."
      operationId: helthCheck
      responses:
        "200":
          description: OK
      security: []
      x-swagger-router-controller: Default
  /products:
    summary: List all products
    description: description
    get:
      summary: List all products
      description: List all products description
      operationId: listProducts
      responses:
        "200":
          description: List of Products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
                x-content-type: application/json
      x-swagger-router-controller: Default
  /product:
    post:
      summary: Save a product
      description: This is description only
      operationId: saveProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
            example:
              name: Ball
              name_display: Ball
              description: Desc
      responses:
        "201":
          description: Created
        "400":
          description: Invalid parameter
        "404":
          description: Not found
        default:
          description: Unexpected error
      security: []
      x-swagger-router-controller: Default
    patch:
      summary: Update Product
      operationId: updateProduct
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Default
  /products/{id}:
    get:
      summary: Get product by ID
      description: This is description only
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
      security: []
      x-swagger-router-controller: Default
    delete:
      summary: Delete Product
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
      security: []
      x-swagger-router-controller: Default
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        name_display:
          type: string
          example: White Golf Ball
        name_print:
          type: string
          example: W G Ball
        description:
          type: string
          example: White Golf Ball Adamns Co
        price:
          type: number
          format: float
          example: 12.78
        tax:
          type: number
          format: float
          example: 0.05
      example:
        price: 12.78
        name_print: W G Ball
        name_display: White Golf Ball
        description: White Golf Ball Adamns Co
        tax: 0.05
        id: 123
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2232322
        client:
          $ref: "#/components/schemas/Client"
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 23
        document_id:
          type: string
          example: 100.995.221-98
        name:
          type: string
          example: Smith Colder
        address:
          type: string
          example: "23, Fourth street - New York - NY - US"
        orders:
          type: array
          items:
            $ref: "#/components/schemas/Order"
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        product:
          $ref: "#/components/schemas/Product"
        quantity:
          type: integer
          example: 10
        price:
          type: number
          format: float
          example: 12.78
        tax:
          type: number
          format: float
          example: 0.05
        tax_value:
          type: number
          format: float
          example: 0.64
        total:
          type: number
          format: float
          example: 127.8
  securitySchemes:
    accessCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://example.com/oauth/auth
          tokenUrl: http://example.com/oauth/token
          scopes:
            write: allows modifying resources
            read: allows reading resources
